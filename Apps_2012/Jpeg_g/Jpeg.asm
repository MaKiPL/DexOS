;=========================================================;
; Vesa                                         01/04/2012 ;
;---------------------------------------------------------;
; By Dex.                                                 ;
;                                                         ;
; Here is a simple jpeg demo program.                     ;
; for DexOS V 0.06                                        ;
; To assemble use fasm as follows                         ;
; fasm Jpeg.asm Jpeg.gex                                  ;
;=========================================================;
format binary as 'gex'
use32							  ;
	ORG	0x1A00000				  ;
	jmp	start					  ;
	db	'GEX6'					  ;
;=======================================================  ;
; Start of program.                                       ;
;=======================================================  ;
start:							  ;
	mov	ax,18h					  ;                    
	mov	ds,ax					  ;            
	mov	es,ax					  ;           
;=======================================================  ;
; Get calltable address.                                  ;
;=======================================================  ;
	mov	edi,Functions				  ; fill the function table
	mov	al,0					  ; so we have some usefull functions
	mov	ah,0x0a 				  ;
	int	50h					  ;
;=======================================================  ;
; Load vesa info.                                         ;
;=======================================================  ;
	call	[LoadVesaInfo]				  ;
	mov	edi,VESA_Info				  ;
	mov	ecx,193 				  ;
	cld						  ;
	cli						  ;
	rep	movsd					  ;
	sti						  ;
;=======================================================  ;
; Set buffer white and send to screen                     ;
;=======================================================  ;
	mov	ebx,1					  ; get menu buffer address
	mov	ecx,0					  ; get background buffer address
	int	40h					  ;
	mov	dword[MenuBuffer],esi			  ;
;=======================================================  ;
; Decode jpeg.                                            ;
;=======================================================  ;
	mov	edi,BackGroundBuffer			  ;
	mov	esi,file_area				  ;
	mov	ecx,FileEnd-file_area			  ;
	mov	ebx,2					  ; 
	int	40h					  ;
	jc	Vesa_error				  ;
;=======================================================  ;
; move the main back ground image to buffer.              ;
;=======================================================  ;                                                       ;
	call	MoveBuffer				  ;
;=======================================================  ;
; Draw image at X Y.                                      ;
;=======================================================  ;
	mov	edi,VesaBuffer				  ;
	mov	esi,BackGroundBuffer			  ;
	mov	eax,200 				  ;
	mov	ecx,100 				  ;
	mov	ebx,5					  ; 
	int	40h					  ;
							  ;
;=======================================================  ;
; Write buffer to screen and wait key.                    ;
;=======================================================  ;
	call	BuffToScreen				  ; write it to screen
	call	[WaitForKeyPress]			  ;
;=======================================================  ;
; Exit.                                                   ;
;=======================================================  ;
Vesa_error:						  ;
	ret						  ; return to menu

;=======================================================  ;
; BuffToScreen.                                           ;
;=======================================================  ;
BuffToScreen:						  ; test for 24bit or 32bit vesa
	cmp	[ModeInfo_BitsPerPixel],24		  ;
	jne	Try32					  ;
	call	BuffToScreen24				  ;
	jmp	wehavedone24				  ;
Try32:							  ;
	cmp	[ModeInfo_BitsPerPixel],32		  ;
	jne	wehavedone24				  ;
	call	BuffToScreen32				  ;
wehavedone24:						  ;
@@:							  ;
	ret						  ;

;=======================================================  ;
; BuffToScreen32 (32bpp)                                  ;
;=======================================================  ;
BuffToScreen32: 					  ;
	 pushad 					  ;
	 push	 es					  ;
	 mov	 ax,8h					  ;
	 mov	 es,ax					  ;
	 mov	 edi,[ModeInfo_PhysBasePtr]		  ;
	 mov	 esi,VesaBuffer 			  ;
	 xor	 eax,eax				  ;
	 mov	 ecx,eax				  ;
	 mov	 ax,[ModeInfo_XResolution]		  ;
	 mov	 cx,[ModeInfo_YResolution]		  ;
	 mul	 ecx					  ;
	 mov	 ecx,eax				  ;
	 cld						  ;
	 cli						  ;
	 rep	 movsd					  ;
	 sti						  ;
	 pop	 es					  ;
	 popad						  ;
	 ret						  ;

;=======================================================  ;
; BuffToScreen24 (24bpp)                                  ;
;=======================================================  ;
BuffToScreen24: 					  ;
	 pushad 					  ;
	 push	 es					  ;
	 mov	 ax,8h					  ;
	 mov	 es,ax					  ;
	 xor	 eax,eax				  ;
	 mov	 ecx,eax				  ;
	 mov	 ebx,eax				  ;
	 mov	 ax,[ModeInfo_YResolution]		  ;
	 mov	 ebp,eax				  ;
	 lea	 eax,[ebp*2+ebp]			  ;
	 mov	 edi,[ModeInfo_PhysBasePtr]		  ;
	 mov	 esi,VesaBuffer 			  ;
	 cld						  ;
.l1:							  ;
	 mov	 cx,[ModeInfo_XResolution]		  ;
	 shr	 ecx,2					  ;
.l2:							  ;
	 mov	 eax,[esi]				  ;
	 mov	 ebx,[esi+4]				  ;
	 shl	 eax,8					  ;
	 shrd	 eax,ebx,8				  ;
	 stosd						  ;
							  ;
	 mov	 ax,[esi+8]				  ;
	 shr	 ebx,8					  ;
	 shl	 eax,16 				  ;
	 or	 eax,ebx				  ;
	 stosd						  ;
							  ;
	 mov	 bl,[esi+10]				  ;
	 mov	 eax,[esi+12]				  ;
	 shl	 eax,8					  ;
	 mov	 al,bl					  ;
	 stosd						  ;
							  ;
	 add	 esi,16 				  ;
	 loop	 .l2					  ;
							  ;
	 sub	 ebp,1					  ;
	 ja	.l1					  ;
							  ;
	 pop	 es					  ;
	 popad						  ;
	 ret						  ;

;=======================================================  ;
; Move buffer                                             ;
;=======================================================  ;
MoveBuffer:						  ;
	 pushad 					  ;
	 mov	esi,[MenuBuffer]			  ;
	 mov	edi,VesaBuffer				  ;
	 mov	ecx,800*600				  ;
	 rep	movsd					  ;
	 popad						  ;
	 ret						  ;

;=======================================================  ;
; Data                                                    ;
;=======================================================  ;
align 4 						  ;
MenuBuffer  dd	0					  ;
align 4 						  ;
file_area:						  ;
file   'test.jpg'					  ;
FileEnd:						  ;
align 4 						  ;
BackGroundBuffer: rd  400*336+2 			  ;
include 'Dex.inc'					  ; Here is where we includ our "Dex.inc" file
VesaBuffer:						  ; our screen buffer
